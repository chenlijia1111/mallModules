<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.chenlijia1111.commonModule.dao.ShoppingOrderMapper">
  <resultMap id="BaseResultMap" type="com.github.chenlijia1111.commonModule.entity.ShoppingOrder">
    <id column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="custom" jdbcType="VARCHAR" property="custom" />
    <result column="shops" jdbcType="VARCHAR" property="shops" />
    <result column="goods_id" jdbcType="VARCHAR" property="goodsId" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="product_amount_total" jdbcType="DOUBLE" property="productAmountTotal" />
    <result column="pay_channel" jdbcType="VARCHAR" property="payChannel" />
    <result column="pay_record" jdbcType="VARCHAR" property="payRecord" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="good_price" jdbcType="DOUBLE" property="goodPrice" />
    <result column="order_amount_total" jdbcType="DOUBLE" property="orderAmountTotal" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="details_json" jdbcType="VARCHAR" property="detailsJson" />
    <result column="shop_group_id" jdbcType="VARCHAR" property="shopGroupId" />
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="payable" jdbcType="DOUBLE" property="payable" />
    <result column="order_coupon" jdbcType="VARCHAR" property="orderCoupon" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="shop_remarks" jdbcType="VARCHAR" property="shopRemarks" />
    <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
    <result column="cancel_time" jdbcType="TIMESTAMP" property="cancelTime" />
    <result column="complete_status" jdbcType="INTEGER" property="completeStatus" />
    <result column="single_order_append" jdbcType="VARCHAR" property="singleOrderAppend" />
  </resultMap>
  <sql id="Base_Column_List">
    order_no, custom, shops, goods_id, count, state, order_type,
           product_amount_total, pay_channel, pay_record, transaction_id,
           good_price, order_amount_total, pay_time, details_json, shop_group_id,
           group_id, payable, order_coupon, create_time, remarks, shop_remarks,
           delete_status,cancel_time,complete_status, single_order_append
  </sql>
  <select id="listByGroupIdSet" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM
    s_shopping_order
    <foreach collection="groupIdSet" item="groupId" open="WHERE group_id IN (" close=")" separator=",">
      #{groupId}
    </foreach>
  </select>
  <select id="listByGroupIdSetFilterLongField" resultMap="BaseResultMap">
    SELECT
    order_no, custom, shops, goods_id, count, state, order_type,
    product_amount_total, pay_channel, pay_record, transaction_id,
    good_price, order_amount_total, pay_time, shop_group_id,
    group_id, payable, create_time, remarks, shop_remarks,
    delete_status,cancel_time,complete_status, single_order_append
    FROM
    s_shopping_order
    <foreach collection="groupIdSet" item="groupId" open="WHERE group_id IN (" close=")" separator=",">
      #{groupId}
    </foreach>
  </select>
  <select id="listByOrderNoSet" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM
    s_shopping_order
    <foreach collection="orderNoSet" item="orderNo" open="WHERE order_no IN (" close=")" separator=",">
      #{orderNo}
    </foreach>
  </select>
  <select id="listByOrderNoSetFilterLongField" resultMap="BaseResultMap">
    SELECT
    order_no, custom, shops, goods_id, count, state, order_type,
    product_amount_total, pay_channel, pay_record, transaction_id,
    good_price, order_amount_total, pay_time, shop_group_id,
    group_id, payable, create_time, remarks, shop_remarks,
    delete_status,cancel_time,complete_status, single_order_append
    FROM
    s_shopping_order
    <foreach collection="orderNoSet" item="orderNo" open="WHERE order_no IN (" close=")" separator=",">
      #{orderNo}
    </foreach>
  </select>
  <select id="listByShopGroupIdSet" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM
    s_shopping_order
    <foreach collection="shopGroupIdSet" item="shopGroupId" open="WHERE shop_group_id IN (" close=")" separator=",">
      #{shopGroupId}
    </foreach>
  </select>
  <select id="listByShopGroupIdSetFilterLongField" resultMap="BaseResultMap">
    SELECT
    order_no, custom, shops, goods_id, count, state, order_type,
    product_amount_total, pay_channel, pay_record, transaction_id,
    good_price, order_amount_total, pay_time, shop_group_id,
    group_id, payable, create_time, remarks, shop_remarks,
    delete_status,cancel_time,complete_status, single_order_append
    FROM
    s_shopping_order
    <foreach collection="shopGroupIdSet" item="shopGroupId" open="WHERE shop_group_id IN (" close=")" separator=",">
      #{shopGroupId}
    </foreach>
  </select>
  <select id="maxOrderNo" resultType="java.lang.String">
    SELECT s_shopping_order.order_no
    FROM s_shopping_order
    ORDER BY s_shopping_order.create_time DESC,s_shopping_order.order_no DESC
    LIMIT 1
  </select>
  <select id="maxGroupId" resultType="java.lang.String">
    SELECT s_shopping_order.group_id
    FROM s_shopping_order
    ORDER BY s_shopping_order.create_time DESC,s_shopping_order.group_id DESC
    LIMIT 1
  </select>
  <select id="maxShopGroupId" resultType="java.lang.String">
    SELECT s_shopping_order.shop_group_id
    FROM s_shopping_order
    ORDER BY s_shopping_order.create_time DESC,s_shopping_order.shop_group_id DESC
    LIMIT 1
  </select>
  <insert id="batchAdd">
    INSERT INTO s_shopping_order (order_no, custom, shops, goods_id, count, state, order_type, product_amount_total,
                                  pay_channel, pay_record, transaction_id, good_price, order_amount_total, pay_time,
                                  details_json, shop_group_id, group_id, payable, order_coupon, create_time, remarks,
                                  shop_remarks, delete_status,cancel_time,complete_status,single_order_append) VALUES
    <foreach collection="shoppingOrderList" item="shoppingOrder" separator=",">
      (#{shoppingOrder.orderNo},#{shoppingOrder.custom},#{shoppingOrder.shops},#{shoppingOrder.goodsId},
       #{shoppingOrder.count},#{shoppingOrder.state},
       #{shoppingOrder.orderType},#{shoppingOrder.productAmountTotal},#{shoppingOrder.payChannel},
       #{shoppingOrder.payRecord},#{shoppingOrder.transactionId},#{shoppingOrder.goodPrice},
       #{shoppingOrder.orderAmountTotal},#{shoppingOrder.payTime},#{shoppingOrder.detailsJson},
       #{shoppingOrder.shopGroupId},#{shoppingOrder.groupId},#{shoppingOrder.payable},
      #{shoppingOrder.orderCoupon},#{shoppingOrder.createTime},#{shoppingOrder.remarks},
       #{shoppingOrder.shopRemarks},#{shoppingOrder.deleteStatus},#{shoppingOrder.cancelTime},
      #{shoppingOrder.completeStatus},#{shoppingOrder.singleOrderAppend})
    </foreach>
  </insert>
  <select id="listDelayNotPayOrder" resultType="com.github.chenlijia1111.commonModule.common.responseVo.order.DelayNotPayOrder">
    SELECT
      s_shopping_order.group_id groupId,max(s_shopping_order.create_time) createTime
    FROM
      s_shopping_order
    WHERE s_shopping_order.delete_status = 0
      AND s_shopping_order.state = 0
      AND s_shopping_order.pay_time IS NULL
    GROUP BY s_shopping_order.group_id
  </select>
  <select id="listDelayNotPayOrderWithShopGroupNo" resultType="com.github.chenlijia1111.commonModule.common.responseVo.order.DelayNotPayOrder">
    SELECT
      s_shopping_order.shop_group_id groupId,max(s_shopping_order.create_time) createTime
    FROM
      s_shopping_order
    WHERE s_shopping_order.delete_status = 0
      AND s_shopping_order.state = 0
      AND s_shopping_order.pay_time IS NULL
    GROUP BY s_shopping_order.shop_group_id
  </select>
  <select id="listDelayNotPayOrderWithOrderNo" resultType="com.github.chenlijia1111.commonModule.common.responseVo.order.DelayNotPayOrder">
    SELECT
      s_shopping_order.order_no groupId,s_shopping_order.create_time createTime
    FROM
      s_shopping_order
    WHERE s_shopping_order.delete_status = 0
      AND s_shopping_order.state = 0
      AND s_shopping_order.pay_time IS NULL
  </select>
  <select id="findOrderState" resultType="java.lang.Integer">
    SELECT s_shopping_order.state
    FROM s_shopping_order
    WHERE s_shopping_order.group_id = #{groupId}
    LIMIT 1
  </select>
  <select id="listDelayNotEvaluateOrder"
          resultType="com.github.chenlijia1111.commonModule.common.responseVo.order.DelayNotEvaluateOrder">
    SELECT
    s_shopping_order.order_no orderNo,s_receiving_goods_order.receive_time receiveTime
    FROM s_immediate_payment_order,s_receiving_goods_order,s_shopping_order
    WHERE s_immediate_payment_order.front_order = s_shopping_order.order_no
    AND s_receiving_goods_order.front_order = s_immediate_payment_order.order_no
    AND s_receiving_goods_order.state = 983042
    AND NOT exists(
        SELECT s_evaluation.id
        FROM s_evaluation
        WHERE s_evaluation.order_no = s_shopping_order.order_no
        LIMIT 1
    )
  </select>
  <select id="listDelayNotReceiveOrder"
          resultType="com.github.chenlijia1111.commonModule.common.responseVo.order.DelayNotReceiveOrder">
    SELECT
      s_shopping_order.order_no orderNo,s_immediate_payment_order.express_sign_time signTime
    FROM s_immediate_payment_order,s_receiving_goods_order,s_shopping_order
    WHERE s_immediate_payment_order.front_order = s_shopping_order.order_no
      AND s_receiving_goods_order.front_order = s_immediate_payment_order.order_no
      AND s_immediate_payment_order.state = 983042
      AND s_immediate_payment_order.express_sign_status = 1
      AND s_receiving_goods_order.state = 0
  </select>

  <select id="listOrderStatusFieldVoByOrderNoSet"
            resultType="com.github.chenlijia1111.commonModule.common.responseVo.order.OrderStatusFieldVo">
    SELECT tempOrder.orderNo,
            shopGroupNo,
            groupNo,
            orderState,
            payStatus,
            completeStatus,
            sendStatus,
            receiveStatus,
            if(s_evaluation.order_no IS NULL, 0, 1) evaluateStatus
    FROM (SELECT s_shopping_order.order_no                         orderNo,
                  s_shopping_order.shop_group_id                    shopGroupNo,
                  s_shopping_order.group_id                         groupNo,
                  s_shopping_order.state                            orderState,
                  if(s_shopping_order.transaction_id IS NULL, 0, 1) payStatus,
                  s_shopping_order.complete_status                  completeStatus,
                  s_immediate_payment_order.state                   sendStatus,
                  s_receiving_goods_order.state                     receiveStatus
          FROM s_shopping_order,
          s_immediate_payment_order,
          s_receiving_goods_order
          WHERE s_shopping_order.delete_status = 0
          AND s_shopping_order.order_no = s_immediate_payment_order.front_order
          AND s_immediate_payment_order.order_no = s_receiving_goods_order.front_order
          <foreach collection="orderNoSet" item="orderNo" open="AND s_shopping_order.order_no IN (" close=")" separator=",">
            #{orderNo}
          </foreach>

        ) tempOrder
    LEFT JOIN s_evaluation
    ON tempOrder.orderNo = s_evaluation.order_no
  </select>
</mapper>
